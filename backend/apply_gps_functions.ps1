# Script pour appliquer les fonctions GPS manquantes
# R√©sout le probl√®me "aucun r√©sultat apr√®s s√©lection de zone GPS"

Write-Host "üöÄ APPLICATION DES FONCTIONS GPS MANQUANTES" -ForegroundColor Green
Write-Host "=============================================" -ForegroundColor Green
Write-Host ""

Write-Host "üîç DIAGNOSTIC :" -ForegroundColor Yellow
Write-Host "   - Recherche GPS retourne 0 r√©sultats" -ForegroundColor Red
Write-Host "   - Fonctions PostgreSQL GPS manquantes" -ForegroundColor Red
Write-Host "   - Code Rust essaie d'appeler extract_gps_coordinates()" -ForegroundColor Red
Write-Host ""

Write-Host "üìã √âTAPES DE R√âSOLUTION :" -ForegroundColor Cyan
Write-Host ""

Write-Host "1Ô∏è‚É£ V√©rifier la connexion PostgreSQL :" -ForegroundColor Yellow
Write-Host "   Test de connexion √† la base yukpo_db..." -ForegroundColor White

# Test de connexion PostgreSQL
try {
    $testConnection = & psql -h localhost -U postgres -d yukpo_db -c "SELECT 1;" 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úÖ Connexion PostgreSQL OK" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Erreur connexion PostgreSQL" -ForegroundColor Red
        Write-Host "   V√©rifiez que PostgreSQL est d√©marr√© et accessible" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "   ‚ùå Erreur connexion PostgreSQL" -ForegroundColor Red
    Write-Host "   V√©rifiez que PostgreSQL est d√©marr√© et accessible" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "2Ô∏è‚É£ V√©rifier les fonctions GPS existantes :" -ForegroundColor Yellow
Write-Host "   Recherche des fonctions GPS dans la base..." -ForegroundColor White

# V√©rifier les fonctions GPS existantes
$gpsFunctions = & psql -h localhost -U postgres -d yukpo_db -c "SELECT proname FROM pg_proc WHERE proname LIKE '%gps%';" 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "   üìã Fonctions GPS trouv√©es :" -ForegroundColor Cyan
    $gpsFunctions | ForEach-Object { Write-Host "      $_" -ForegroundColor White }
} else {
    Write-Host "   ‚ùå Erreur lors de la v√©rification des fonctions GPS" -ForegroundColor Red
}

Write-Host ""
Write-Host "3Ô∏è‚É£ Cr√©er les fonctions GPS manquantes :" -ForegroundColor Yellow
Write-Host "   Application du script SQL..." -ForegroundColor White

# Appliquer le script SQL
try {
    $result = & psql -h localhost -U postgres -d yukpo_db -f "create_gps_enhanced_search_function.sql" 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úÖ Fonctions GPS cr√©√©es avec succ√®s" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Erreur lors de la cr√©ation des fonctions GPS" -ForegroundColor Red
        Write-Host "   D√©tails de l'erreur :" -ForegroundColor Red
        $result | ForEach-Object { Write-Host "      $_" -ForegroundColor Red }
    }
} catch {
    Write-Host "   ‚ùå Erreur lors de la cr√©ation des fonctions GPS" -ForegroundColor Red
}

Write-Host ""
Write-Host "4Ô∏è‚É£ V√©rifier que les fonctions sont cr√©√©es :" -ForegroundColor Yellow
Write-Host "   V√©rification finale..." -ForegroundColor White

# V√©rification finale
$finalCheck = & psql -h localhost -U postgres -d yukpo_db -c "SELECT proname FROM pg_proc WHERE proname IN ('calculate_gps_distance_km', 'extract_gps_coordinates', 'search_images_by_metadata_with_gps', 'search_services_in_gps_zone');" 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "   ‚úÖ Toutes les fonctions GPS sont cr√©√©es" -ForegroundColor Green
    $finalCheck | ForEach-Object { Write-Host "      $_" -ForegroundColor White }
} else {
    Write-Host "   ‚ùå Certaines fonctions GPS sont manquantes" -ForegroundColor Red
}

Write-Host ""
Write-Host "5Ô∏è‚É£ Tester le filtrage GPS :" -ForegroundColor Yellow
Write-Host "   Test de la fonction de recherche GPS..." -ForegroundColor White

# Test de la fonction GPS
try {
    $testResult = & psql -h localhost -U postgres -d yukpo_db -c "SELECT search_services_in_gps_zone('4.0511,9.7679', 25, NULL, 5);" 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "   ‚úÖ Test de recherche GPS r√©ussi" -ForegroundColor Green
        Write-Host "   R√©sultat :" -ForegroundColor White
        $testResult | ForEach-Object { Write-Host "      $_" -ForegroundColor White }
    } else {
        Write-Host "   ‚ùå Erreur lors du test de recherche GPS" -ForegroundColor Red
        Write-Host "   D√©tails :" -ForegroundColor Red
        $testResult | ForEach-Object { Write-Host "      $_" -ForegroundColor Red }
    }
} catch {
    Write-Host "   ‚ùå Erreur lors du test de recherche GPS" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéØ R√âSULTAT ATTENDU :" -ForegroundColor Green
Write-Host "   - Fonctions GPS cr√©√©es dans PostgreSQL" -ForegroundColor White
Write-Host "   - Recherche GPS fonctionnelle" -ForegroundColor White
Write-Host "   - Plus de 0 r√©sultats apr√®s s√©lection de zone GPS" -ForegroundColor White
Write-Host ""

Write-Host "üöÄ PROCHAINES √âTAPES :" -ForegroundColor Cyan
Write-Host "   1. Red√©marrer le backend Rust" -ForegroundColor White
Write-Host "   2. Tester la recherche avec zone GPS s√©lectionn√©e" -ForegroundColor White
Write-Host "   3. V√©rifier que les r√©sultats s'affichent correctement" -ForegroundColor White
Write-Host ""

Write-Host "‚úÖ Script termin√© !" -ForegroundColor Green 