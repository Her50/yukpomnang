# Script de nettoyage des embeddings fant√¥mes dans Pinecone
# Supprime les embeddings des services qui n'existent plus en base

Write-Host "üîç Nettoyage des embeddings fant√¥mes..." -ForegroundColor Cyan

# Configuration
$backendUrl = "http://localhost:3000"
$embeddingUrl = "http://localhost:8000"
$apiKey = "yukpo_embedding_key_2024"

# Services fant√¥mes identifi√©s dans les logs (retournent 404)
$ghostServiceIds = @(862419, 20977, 518829, 939282, 742692)

Write-Host "üìä Services fant√¥mes √† v√©rifier: $($ghostServiceIds -join ', ')" -ForegroundColor Yellow

foreach ($serviceId in $ghostServiceIds) {
    Write-Host "`nüîç V√©rification du service $serviceId..." -ForegroundColor Gray
    
    try {
        # V√©rifier si le service existe via l'API backend
        $response = Invoke-RestMethod -Uri "$backendUrl/api/services/$serviceId" -Method GET -ErrorAction SilentlyContinue
        
        if ($response) {
            Write-Host "‚úÖ Service $serviceId: EXISTE en base" -ForegroundColor Green
        }
    }
    catch {
        if ($_.Exception.Response.StatusCode -eq 404) {
            Write-Host "‚ùå Service $serviceId: N'EXISTE PAS en base - Suppression de Pinecone" -ForegroundColor Red
            
            try {
                # Supprimer l'embedding de Pinecone
                $deleteBody = @{
                    service_id = $serviceId
                } | ConvertTo-Json
                
                $deleteResponse = Invoke-RestMethod -Uri "$embeddingUrl/delete_embedding_pinecone" -Method POST -Body $deleteBody -ContentType "application/json" -Headers @{"x-api-key" = $apiKey}
                
                Write-Host "   üóëÔ∏è  Embedding supprim√© de Pinecone: $($deleteResponse | ConvertTo-Json)" -ForegroundColor Green
            }
            catch {
                Write-Host "   ‚ö†Ô∏è  Erreur suppression embedding: $($_.Exception.Message)" -ForegroundColor Yellow
            }
        }
        else {
            Write-Host "‚ö†Ô∏è  Erreur v√©rification service $serviceId: $($_.Exception.Message)" -ForegroundColor Yellow
        }
    }
}

Write-Host "`nüìà Statistiques apr√®s nettoyage:" -ForegroundColor Cyan

try {
    # Compter les services actifs
    $statsResponse = Invoke-RestMethod -Uri "$backendUrl/api/services/stats" -Method GET -ErrorAction SilentlyContinue
    
    if ($statsResponse) {
        Write-Host "   Total des services: $($statsResponse.total)" -ForegroundColor White
        Write-Host "   Services actifs: $($statsResponse.active)" -ForegroundColor White
    }
}
catch {
    Write-Host "   ‚ö†Ô∏è  Impossible de r√©cup√©rer les statistiques" -ForegroundColor Yellow
}

Write-Host "`nüéØ Nettoyage termin√© !" -ForegroundColor Green
Write-Host "   Les embeddings fant√¥mes ont √©t√© supprim√©s de Pinecone." -ForegroundColor White
Write-Host "   Seuls les services existants en base seront retourn√©s." -ForegroundColor White 