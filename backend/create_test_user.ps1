# Script pour cr√©er un utilisateur de test
# Usage: .\create_test_user.ps1

Write-Host "üìù Cr√©ation d'un utilisateur de test pour Yukpo..." -ForegroundColor Yellow

# Charger les variables d'environnement
if (Test-Path ".env") {
    Get-Content .env | ForEach-Object {
        if ($_ -match "^([^#][^=]+)=(.*)$") {
            [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
        }
    }
    Write-Host "‚úÖ Variables d'environnement charg√©es depuis .env" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Fichier .env non trouv√©" -ForegroundColor Yellow
}

$dbUrl = $env:DATABASE_URL
if (-not $dbUrl) {
    Write-Host "‚ùå DATABASE_URL non d√©fini dans .env" -ForegroundColor Red
    exit 1
}

Write-Host "üîç Connexion √† la base de donn√©es..." -ForegroundColor Cyan
Write-Host "Database URL: $dbUrl" -ForegroundColor Gray

try {
    # Utiliser psql pour ex√©cuter le script
    $result = psql $dbUrl -f "create_test_user.sql"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Utilisateur de test cr√©√© avec succ√®s!" -ForegroundColor Green
        Write-Host "" -ForegroundColor White
        Write-Host "üìã Informations de connexion:" -ForegroundColor Cyan
        Write-Host "   Email: admin@yukpo.dev" -ForegroundColor White
        Write-Host "   Mot de passe: password123" -ForegroundColor White
        Write-Host "   R√¥le: admin" -ForegroundColor White
        Write-Host "   Tokens: 10000 XAF" -ForegroundColor White
    } else {
        Write-Host "‚ùå Erreur lors de la cr√©ation de l'utilisateur" -ForegroundColor Red
    }
}
catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}
