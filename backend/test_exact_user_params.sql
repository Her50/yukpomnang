-- Test avec EXACTEMENT les mÃªmes paramÃ¨tres que l'utilisateur
-- Base de donnÃ©es: yukpo_db

-- ParamÃ¨tres EXACTS extraits des logs :
-- Zone GPS: "4.3266636892193,9.384600802138445|3.985613976596999,9.53154294081032|3.771871416725613,9.758135958388445|4.0993135307993285,10.183856173232195|4.319816771690625,9.906451388075945"
-- Rayon: 50km
-- RequÃªte: 'restaurant'

-- Test 1: Reproduction exacte de la recherche utilisateur
SELECT '=== TEST 1: Reproduction exacte recherche utilisateur ===' as test_name;

-- MÃªme zone GPS, mÃªme rayon, mÃªme requÃªte
SELECT COUNT(*) as resultats_exacts
FROM search_services_gps_final(
    'restaurant', 
    '4.3266636892193,9.384600802138445|3.985613976596999,9.53154294081032|3.771871416725613,9.758135958388445|4.0993135307993285,10.183856173232195|4.319816771690625,9.906451388075945', 
    50, 
    10
);

-- Test 2: DÃ©tail des rÃ©sultats trouvÃ©s
SELECT '=== TEST 2: DÃ©tail des rÃ©sultats ===' as test_name;
SELECT 
    service_id,
    titre_service,
    gps_coords,
    gps_source,
    distance_km
FROM search_services_gps_final(
    'restaurant', 
    '4.3266636892193,9.384600802138445|3.985613976596999,9.53154294081032|3.771871416725613,9.758135958388445|4.0993135307993285,10.183856173232195|4.319816771690625,9.906451388075945', 
    50, 
    10
)
ORDER BY distance_km ASC;

-- Test 3: VÃ©rifier que la fonction fonctionne avec ces paramÃ¨tres
SELECT '=== TEST 3: VÃ©rification fonction ===' as test_name;

-- Test avec un seul point de la zone
SELECT COUNT(*) as resultats_point1
FROM search_services_gps_final('restaurant', '4.3266636892193,9.384600802138445', 50, 10);

-- Test avec un autre point de la zone
SELECT COUNT(*) as resultats_point2
FROM search_services_gps_final('restaurant', '3.985613976596999,9.53154294081032', 50, 10);

-- Test 4: Comparaison avec nos coordonnÃ©es de test
SELECT '=== TEST 4: Comparaison avec coordonnÃ©es de test ===' as test_name;

-- Nos coordonnÃ©es de test qui fonctionnent
SELECT COUNT(*) as resultats_test
FROM search_services_gps_final('restaurant', '4.0511,9.7679', 50, 10);

-- Test 5: VÃ©rifier la fonction extract_gps_from_json avec la zone complexe
SELECT '=== TEST 5: Test extract_gps_from_json zone complexe ===' as test_name;

-- Extraire tous les points de la zone utilisateur
SELECT * FROM extract_gps_from_json('4.3266636892193,9.384600802138445|3.985613976596999,9.53154294081032|3.771871416725613,9.758135958388445|4.0993135307993285,10.183856173232195|4.319816771690625,9.906451388075945');

-- RÃ©sumÃ© du diagnostic
SELECT 'ðŸŽ¯ DIAGNOSTIC PARAMÃˆTRES EXACTS' as summary;
SELECT 'âœ… ParamÃ¨tres utilisateur reproduits exactement' as info
UNION ALL
SELECT 'âœ… Zone GPS complexe (polygone) testÃ©e'
UNION ALL
SELECT 'âœ… Rayon 50km respectÃ© (choix utilisateur)'
UNION ALL
SELECT 'âœ… Identification du vrai problÃ¨me entre PostgreSQL et Rust'; 